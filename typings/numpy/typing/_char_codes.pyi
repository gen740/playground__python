"""
This type stub file was generated by pyright.
"""

import sys
from typing import Literal, TYPE_CHECKING

"""
This type stub file was generated by pyright.
"""
if sys.version_info >= (3, 8):
    HAVE_LITERAL = ...
else:
    ...
if TYPE_CHECKING or HAVE_LITERAL:
    _BoolCodes = Literal["?", "=?", "<?", ">?", "bool", "bool_", "bool8"]
    _UInt8Codes = Literal["uint8", "u1", "=u1", "<u1", ">u1"]
    _UInt16Codes = Literal["uint16", "u2", "=u2", "<u2", ">u2"]
    _UInt32Codes = Literal["uint32", "u4", "=u4", "<u4", ">u4"]
    _UInt64Codes = Literal["uint64", "u8", "=u8", "<u8", ">u8"]
    _Int8Codes = Literal["int8", "i1", "=i1", "<i1", ">i1"]
    _Int16Codes = Literal["int16", "i2", "=i2", "<i2", ">i2"]
    _Int32Codes = Literal["int32", "i4", "=i4", "<i4", ">i4"]
    _Int64Codes = Literal["int64", "i8", "=i8", "<i8", ">i8"]
    _Float16Codes = Literal["float16", "f2", "=f2", "<f2", ">f2"]
    _Float32Codes = Literal["float32", "f4", "=f4", "<f4", ">f4"]
    _Float64Codes = Literal["float64", "f8", "=f8", "<f8", ">f8"]
    _Complex64Codes = Literal["complex64", "c8", "=c8", "<c8", ">c8"]
    _Complex128Codes = Literal["complex128", "c16", "=c16", "<c16", ">c16"]
    _ByteCodes = Literal["byte", "b", "=b", "<b", ">b"]
    _ShortCodes = Literal["short", "h", "=h", "<h", ">h"]
    _IntCCodes = Literal["intc", "i", "=i", "<i", ">i"]
    _IntPCodes = Literal["intp", "int0", "p", "=p", "<p", ">p"]
    _IntCodes = Literal["long", "int", "int_", "l", "=l", "<l", ">l"]
    _LongLongCodes = Literal["longlong", "q", "=q", "<q", ">q"]
    _UByteCodes = Literal["ubyte", "B", "=B", "<B", ">B"]
    _UShortCodes = Literal["ushort", "H", "=H", "<H", ">H"]
    _UIntCCodes = Literal["uintc", "I", "=I", "<I", ">I"]
    _UIntPCodes = Literal["uintp", "uint0", "P", "=P", "<P", ">P"]
    _UIntCodes = Literal["uint", "L", "=L", "<L", ">L"]
    _ULongLongCodes = Literal["ulonglong", "Q", "=Q", "<Q", ">Q"]
    _HalfCodes = Literal["half", "e", "=e", "<e", ">e"]
    _SingleCodes = Literal["single", "f", "=f", "<f", ">f"]
    _DoubleCodes = Literal["double", "float", "float_", "d", "=d", "<d", ">d"]
    _LongDoubleCodes = Literal["longdouble", "longfloat", "g", "=g", "<g", ">g"]
    _CSingleCodes = Literal["csingle", "singlecomplex", "F", "=F", "<F", ">F"]
    _CDoubleCodes = Literal["cdouble", "complex", "complex_", "cfloat", "D", "=D", "<D", ">D"]
    _CLongDoubleCodes = Literal["clongdouble", "clongfloat", "longcomplex", "G", "=G", "<G", ">G"]
    _StrCodes = Literal["str", "str_", "str0", "unicode", "unicode_", "U", "=U", "<U", ">U"]
    _BytesCodes = Literal["bytes", "bytes_", "bytes0", "S", "=S", "<S", ">S"]
    _VoidCodes = Literal["void", "void0", "V", "=V", "<V", ">V"]
    _ObjectCodes = Literal["object", "object_", "O", "=O", "<O", ">O"]
    _DT64Codes = ...
    _TD64Codes = ...
else:
    ...
