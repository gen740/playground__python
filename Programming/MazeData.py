from graphviz import Digraph

"""

問題66
┌────┬────┬────┬────┬────┬────┬────┐
│  0 │  1 │  2 │  3 │  4 │  5 │  6 │
├────┼────┼────┼────┼────┼────┼────┤
│  7 │  8 │  9 │ 10 │ 11 │ 12 │ 13 │
├────┼────┼────┼────┼────┼────┼────┤
│ 14 │ 15 │ 16 │ 17 │ 18 │ 19 │ 20 │
├────┼────┼────┼────┼────┼────┼────┤
│ 21 │ 22 │ 23 │ 24 │ 25 │ 26 │ 27 │
├────┼────┼────┼────┼────┼────┼────┤
│ 28 │ 29 │ 30 │ 31 │ 32 │ 33 │ 34 │
├────┼────┼────┼────┼────┼────┼────┤
│ 35 │ 36 │ 37 │ 38 │ 39 │ 40 │ 41 │
├────┼────┼────┼────┼────┼────┼────┤
│ 42 │ 43 │ 44 │ 45 │ 46 │ 47 │ 48 │
└────┴────┴────┴────┴────┴────┴────┘
のように頂点の番号をつけ、各頂点がどの頂点に接続されているかを書き下す。

"""

P66 = [(7, 14, 21, 28, 35, 42),
       (7,),
       (10, 18, 26, 34),
       (9, 15, 21),
       (10, 16, 22, 28),
       (13,),
       (12, 18, 24, 30, 36, 42),
       (0,),
       (15, 22, 29, 36, 43),
       (2,),
       (16, 22, 28),
       (5,),
       (11, 10, 9, 8, 7),
       (19, 25, 31, 37, 43),
       (8, 2),
       (23, 31, 39, 47),
       (10, 4),
       (25, 33, 41),
       (26, 34),
       (11, 3),
       (26, 32, 38, 44),
       (15, 9, 3),
       (28,),
       (31, 39, 47),
       (),
       (32, 39, 46),
       (27,),
       (19, 11, 3),
       (36, 44),
       (30, 31, 32, 33, 34),
       (22, 14),
       (25, 19, 13),
       (38, 44),
       (26, 19, 12, 5),
       (26, 18, 10, 2),
       (29, 23, 17, 11, 5),
       (43,),
       (30, 23, 16, 9, 2),
       (46,),
       (45,),
       (48,),
       (34, 27, 20, 13, 6),
       (43, 44, 45, 46, 47, 48),
       (42,),
       (38, 32, 26, 20),
       (44, 43, 42),
       (40, 34),
       (48,),
       (47, 46, 45, 44, 43, 32)]

Node66 = []
for i in range(len(P66)):
    for j in P66[i]:
        Node66.append((i, j))

layouts = [
    "circo",
    "dot",
    "fdp",
    "neato",
    "osage",
    "patchwork",
    "sfdp",
    "twopi"] # 様々な可視化を試してみました。


def main():
    for l in layouts:
        G = Digraph(format="png", engine=l)
        G.attr("node", shape="circle")
        for i, j in Node66:
            G.edge(str(i), str(j))
        G.render("Graphviz_66_" + l)


if __name__ == "__main__":
    main()
