"""
This type stub file was generated by pyright.
"""

from OpenGL.latebind import LateBind

"""Extension module support methods

This module provides the tools required to check whether
an extension is available
"""
_log = ...
VERSION_PREFIX = ...
CURRENT_GL_VERSION = ...
AVAILABLE_GL_EXTENSIONS = ...
AVAILABLE_GLU_EXTENSIONS = ...
VERSION_EXTENSIONS = ...
class ExtensionQuerier(object):
    prefix = ...
    version_prefix = ...
    assumed_version = ...
    version = ...
    version_string = ...
    registered = ...
    def __init__(self) -> None:
        ...
    
    @classmethod
    def hasExtension(self, specifier):
        ...
    
    def __call__(self, specifier):
        ...
    
    def getVersion(self):
        ...
    
    def getExtensions(self):
        ...
    


class _GLQuerier(ExtensionQuerier):
    prefix = ...
    version_prefix = ...
    assumed_version = ...
    def pullVersion(self):
        """Retrieve 2-int declaration of major/minor GL version

        returns [int(major),int(minor)] or False if not loaded
        """
        ...
    
    def pullExtensions(self):
        ...
    


GLQuerier = ...
class _GLUQuerier(ExtensionQuerier):
    prefix = ...
    version_prefix = ...
    def pullVersion(self):
        ...
    
    def pullExtensions(self):
        ...
    


GLUQuerier = ...
def hasExtension(specifier):
    ...

hasGLExtension = ...
class _Alternate(LateBind):
    def __init__(self, name, *alternates) -> None:
        """Initialize set of alternative implementations of the same function"""
        ...
    
    def __bool__(self):
        ...
    
    __nonzero__ = ...
    def finalise(self):
        """Call, doing a late lookup and bind to find an implementation"""
        ...
    


def alternate(name, *functions):
    """Construct a callable that functions as the first implementation found of given set of alternatives

    if name is a function then its name will be used....
    """
    ...

