from .typing import ConnectionOption, ExtensionHeader, Subprotocol, UpgradeProtocol
from typing import List, Sequence, Tuple, TypeVar

T = TypeVar('T')

def build_host(host: str, port: int, secure: bool) -> str: ...
def parse_connection(header: str) -> List[ConnectionOption]: ...
def parse_upgrade(header: str) -> List[UpgradeProtocol]: ...
def parse_extension(header: str) -> List[ExtensionHeader]: ...
parse_extension_list = parse_extension

def build_extension(extensions: Sequence[ExtensionHeader]) -> str: ...
build_extension_list = build_extension

def parse_subprotocol(header: str) -> List[Subprotocol]: ...
parse_subprotocol_list = parse_subprotocol

def build_subprotocol(subprotocols: Sequence[Subprotocol]) -> str: ...
build_subprotocol_list = build_subprotocol

def validate_subprotocols(subprotocols: Sequence[Subprotocol]) -> None: ...
def build_www_authenticate_basic(realm: str) -> str: ...
def parse_authorization_basic(header: str) -> Tuple[str, str]: ...
def build_authorization_basic(username: str, password: str) -> str: ...
