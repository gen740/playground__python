"""
This type stub file was generated by pyright.
"""

from django.db.models.expressions import Func
from django.db.models.functions.mixins import FixDurationInputMixin, NumericOutputFieldMixin

"""
Classes to represent the definitions of aggregate functions.
"""
class Aggregate(Func):
    template = ...
    contains_aggregate = ...
    name = ...
    filter_template = ...
    window_compatible = ...
    allow_distinct = ...
    def __init__(self, *expressions, distinct=..., filter=..., **extra) -> None:
        ...
    
    def get_source_fields(self):
        ...
    
    def get_source_expressions(self):
        ...
    
    def set_source_expressions(self, exprs):
        ...
    
    def resolve_expression(self, query=..., allow_joins=..., reuse=..., summarize=..., for_save=...):
        ...
    
    @property
    def default_alias(self):
        ...
    
    def get_group_by_cols(self, alias=...):
        ...
    
    def as_sql(self, compiler, connection, **extra_context):
        ...
    


class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):
    function = ...
    name = ...
    allow_distinct = ...


class Count(Aggregate):
    function = ...
    name = ...
    output_field = ...
    allow_distinct = ...
    def __init__(self, expression, filter=..., **extra) -> None:
        ...
    
    def convert_value(self, value, expression, connection):
        ...
    


class Max(Aggregate):
    function = ...
    name = ...


class Min(Aggregate):
    function = ...
    name = ...


class StdDev(NumericOutputFieldMixin, Aggregate):
    name = ...
    def __init__(self, expression, sample=..., **extra) -> None:
        ...
    


class Sum(FixDurationInputMixin, Aggregate):
    function = ...
    name = ...
    allow_distinct = ...


class Variance(NumericOutputFieldMixin, Aggregate):
    name = ...
    def __init__(self, expression, sample=..., **extra) -> None:
        ...
    


