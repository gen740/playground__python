"""
This type stub file was generated by pyright.
"""

import ctypes

"""Implementations for "held-pointers" of various types

This argument type is special because it is stored, that is, it
needs to be cached on our side so that the memory address does not
go out-of-scope

storedPointers = {}
def glVertexPointerd( array ):
    "Natural writing of glVertexPointerd using standard ctypes"
    arg2 = GL_DOUBLE
    arg3 = 0 # stride
    arg4 = arrays.asArray(array, GL_DOUBLE)
    arg1 = arrays.arraySize( arg4, 'd' )
    platform.PLATFORM.GL.glVertexPointer( arg1, arg2, arg3, arrays.ArrayDatatype.dataPointer(arg4) )
    # only store if we successfully set the value...
    storedPointers[ GL_VERTEX_ARRAY ] = arg4
    return arg4
"""
GLsizei = ctypes.c_int
GLenum = ctypes.c_uint
GLint = ctypes.c_int
GL_INTERLEAVED_ARRAY_POINTER = ...
POINTER_FUNCTION_DATA = ...
def wrapPointerFunction(name, baseFunction, glType, arrayType, startArgs, defaultSize):
    """Wrap the given pointer-setting function"""
    ...

glVertexPointer = ...
glTexCoordPointer = ...
glNormalPointer = ...
glIndexPointer = ...
glEdgeFlagPointer = ...
glColorPointer = ...
glInterleavedArrays = ...
glDrawElements = ...
def glDrawElementsTyped(type, suffix):
    ...

def glSelectBuffer(size, buffer=...):
    """Create a selection buffer of the given size
    """
    ...

def glFeedbackBuffer(size, type, buffer=...):
    """Create a selection buffer of the given size
    """
    ...

def glRenderMode(newMode):
    """Change to the given rendering mode

    If the current mode is GL_FEEDBACK or GL_SELECT, return
    the current buffer appropriate to the mode
    """
    ...

def glGetPointerv(constant):
    """Retrieve a stored pointer constant"""
    ...

