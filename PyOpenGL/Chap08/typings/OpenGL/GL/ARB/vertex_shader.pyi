"""
This type stub file was generated by pyright.
"""

from OpenGL.raw.GL.ARB.vertex_shader import *
from OpenGL.lazywrapper import lazy as _lazy

'''OpenGL extension ARB.vertex_shader

This module customises the behaviour of the 
OpenGL.raw.GL.ARB.vertex_shader to provide a more 
Python-friendly API

Overview (from the spec)
	
	This extension adds programmable vertex level processing to OpenGL. The
	application can write vertex shaders in a high level language as defined
	in the OpenGL Shading Language specification. The language itself is not
	discussed here. A vertex shader replaces the transformation, texture
	coordinate generation and lighting parts of OpenGL, and it also adds
	texture access at the vertex level. Furthermore, management of vertex
	shader objects and loading generic attributes are discussed. A vertex
	shader object, attached to a program object, can be compiled and linked
	to produce an executable that runs on the vertex processor in OpenGL.
	This extension also defines how such an executable interacts with the
	fixed functionality vertex processing of OpenGL 1.4.

The official definition of this extension is available here:
http://www.opengl.org/registry/specs/ARB/vertex_shader.txt
'''
def glInitVertexShaderARB():
    '''Return boolean indicating whether this extension is available'''
    ...

glVertexAttrib1fvARB = ...
glVertexAttrib1svARB = ...
glVertexAttrib1dvARB = ...
glVertexAttrib2fvARB = ...
glVertexAttrib2svARB = ...
glVertexAttrib2dvARB = ...
glVertexAttrib3fvARB = ...
glVertexAttrib3svARB = ...
glVertexAttrib3dvARB = ...
glVertexAttrib4fvARB = ...
glVertexAttrib4svARB = ...
glVertexAttrib4dvARB = ...
glVertexAttrib4ivARB = ...
glVertexAttrib4bvARB = ...
glVertexAttrib4ubvARB = ...
glVertexAttrib4usvARB = ...
glVertexAttrib4uivARB = ...
glVertexAttrib4NbvARB = ...
glVertexAttrib4NsvARB = ...
glVertexAttrib4NivARB = ...
glVertexAttrib4NubvARB = ...
glVertexAttrib4NusvARB = ...
glVertexAttrib4NuivARB = ...
glVertexAttribPointerARB = ...
glGetActiveAttribARB = ...
glGetVertexAttribdvARB = ...
glGetVertexAttribfvARB = ...
glGetVertexAttribivARB = ...
glGetVertexAttribPointervARB = ...
@_lazy(glGetActiveAttribARB)
def glGetActiveAttribARB(baseOperation, program, index):
    """Retrieve the name, size and type of the uniform of the index in the program"""
    ...

@_lazy(glGetAttribLocationARB)
def glGetAttribLocationARB(baseOperation, program, name):
    """Check that name is a string with a null byte at the end of it"""
    ...

