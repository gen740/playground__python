from typing import Any, Iterable, Iterator, List, Mapping, MutableMapping, Protocol, Tuple, Union

class MultipleValuesError(LookupError): ...

class Headers(MutableMapping[str, str]):
    def __init__(self, *args: HeadersLike, **kwargs: str) -> None: ...
    def copy(self) -> Headers: ...
    def serialize(self) -> bytes: ...
    def __contains__(self, key: object) -> bool: ...
    def __iter__(self) -> Iterator[str]: ...
    def __len__(self) -> int: ...
    def __getitem__(self, key: str) -> str: ...
    def __setitem__(self, key: str, value: str) -> None: ...
    def __delitem__(self, key: str) -> None: ...
    def __eq__(self, other: Any) -> bool: ...
    def clear(self) -> None: ...
    def update(self, *args: HeadersLike, **kwargs: str) -> None: ...
    def get_all(self, key: str) -> List[str]: ...
    def raw_items(self) -> Iterator[Tuple[str, str]]: ...

class SupportsKeysAndGetItem(Protocol):
    def keys(self) -> Iterable[str]: ...
    def __getitem__(self, key: str) -> str: ...
HeadersLike = Union[Headers, Mapping[str, str], Iterable[Tuple[str, str]], SupportsKeysAndGetItem]
