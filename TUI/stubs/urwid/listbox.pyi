from collections.abc import Generator
from typing import Any
from urwid import signals as signals
from urwid.canvas import CanvasCombine as CanvasCombine, SolidCanvas as SolidCanvas
from urwid.command_map import CURSOR_DOWN as CURSOR_DOWN, CURSOR_MAX_LEFT as CURSOR_MAX_LEFT, CURSOR_MAX_RIGHT as CURSOR_MAX_RIGHT, CURSOR_PAGE_DOWN as CURSOR_PAGE_DOWN, CURSOR_PAGE_UP as CURSOR_PAGE_UP, CURSOR_UP as CURSOR_UP
from urwid.compat import with_metaclass as with_metaclass, xrange as xrange
from urwid.container import WidgetContainerMixin as WidgetContainerMixin
from urwid.decoration import calculate_top_bottom_filler as calculate_top_bottom_filler, normalize_valign as normalize_valign
from urwid.monitored_list import MonitoredFocusList as MonitoredFocusList, MonitoredList as MonitoredList
from urwid.signals import connect_signal as connect_signal
from urwid.util import is_mouse_press as is_mouse_press
from urwid.widget import BOX as BOX, GIVEN as GIVEN, Widget as Widget, nocache_widget_render_instance as nocache_widget_render_instance

class ListWalkerError(Exception): ...

class ListWalker:
    signals: Any
    def get_focus(self): ...
    def get_next(self, position): ...
    def get_prev(self, position): ...

class SimpleListWalker(MonitoredList, ListWalker):
    focus: int
    wrap_around: Any
    def __init__(self, contents, wrap_around: bool = ...) -> None: ...
    contents: Any
    def set_modified_callback(self, callback) -> None: ...
    def set_focus(self, position) -> None: ...
    def next_position(self, position): ...
    def prev_position(self, position): ...
    def positions(self, reverse: bool = ...): ...

class SimpleFocusListWalker(ListWalker, MonitoredFocusList):
    wrap_around: Any
    def __init__(self, contents, wrap_around: bool = ...) -> None: ...
    def set_modified_callback(self, callback) -> None: ...
    focus: Any
    def set_focus(self, position) -> None: ...
    def next_position(self, position): ...
    def prev_position(self, position): ...
    def positions(self, reverse: bool = ...): ...

class ListBoxError(Exception): ...

class ListBox(Widget, WidgetContainerMixin):
    offset_rows: int
    inset_fraction: Any
    pref_col: str
    set_focus_pending: str
    set_focus_valign_pending: Any
    def __init__(self, body) -> None: ...
    body: Any
    def calculate_visible(self, size, focus: bool = ...): ...
    def render(self, size, focus: bool = ...): ...
    def get_cursor_coords(self, size): ...
    def set_focus_valign(self, valign) -> None: ...
    def set_focus(self, position, coming_from: Any | None = ...) -> None: ...
    def get_focus(self): ...
    focus: Any
    focus_position: Any
    def _contents__getitem__(self, key): ...
    contents: Any
    def options(self) -> None: ...
    def shift_focus(self, size, offset_inset) -> None: ...
    def update_pref_col_from_focus(self, size) -> None: ...
    def change_focus(self, size, position, offset_inset: int = ..., coming_from: Any | None = ..., cursor_coords: Any | None = ..., snap_rows: Any | None = ...) -> None: ...
    def get_focus_offset_inset(self, size): ...
    def make_cursor_visible(self, size) -> None: ...
    def keypress(self, size, key): ...
    def mouse_event(self, size, event, button, col, row, focus): ...
    def ends_visible(self, size, focus: bool = ...): ...
    def __iter__(self): ...
    def __reversed__(self) -> Generator[Any, None, None]: ...
