"""
This type stub file was generated by pyright.
"""

from OpenGL.raw.GL.ARB.imaging import *
from OpenGL.lazywrapper import lazy as _lazy

"""
This type stub file was generated by pyright.
"""
def glInitImagingARB():
    '''Return boolean indicating whether this extension is available'''
    ...

glColorTable = ...
glColorTableParameterfv = ...
glColorTableParameteriv = ...
glGetColorTableParameterfv = ...
glGetColorTableParameteriv = ...
glColorSubTable = ...
glConvolutionFilter1D = ...
glConvolutionFilter2D = ...
glConvolutionParameterfv = ...
glConvolutionParameteriv = ...
glGetConvolutionParameterfv = ...
glGetConvolutionParameteriv = ...
glSeparableFilter2D = ...
glGetHistogramParameterfv = ...
glGetHistogramParameteriv = ...
glGetMinmaxParameterfv = ...
glGetMinmaxParameteriv = ...
glColorTable = ...
glColorSubTable = ...
glSeparableFilter2D = ...
glConvolutionFilter1D = ...
glConvolutionFilter2D = ...
@_lazy(glGetConvolutionFilter)
def glGetConvolutionFilter(baseFunction, target, format, type):
    """Retrieve 1 or 2D convolution parameter "kernels" as pixel data"""
    ...

@_lazy(glGetSeparableFilter)
def glGetSeparableFilter(baseFunction, target, format, type):
    """Retrieve 2 1D convolution parameter "kernels" as pixel data"""
    ...

@_lazy(glGetColorTable)
def glGetColorTable(baseFunction, target, format, type):
    """Retrieve the current 1D color table as a bitmap"""
    ...

@_lazy(glGetHistogram)
def glGetHistogram(baseFunction, target, reset, format, type, values=...):
    """Retrieve current 1D histogram as a 1D bitmap"""
    ...

@_lazy(glGetMinmax)
def glGetMinmax(baseFunction, target, reset, format, type, values=...):
    """Retrieve minimum and maximum values as a 2-element image"""
    ...

