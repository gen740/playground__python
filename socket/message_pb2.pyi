"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _DataType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _DataTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DataType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN: _DataType.ValueType  # 0
    LRFDATA: _DataType.ValueType  # 1
class DataType(_DataType, metaclass=_DataTypeEnumTypeWrapper):
    pass

UNKNOWN: DataType.ValueType  # 0
LRFDATA: DataType.ValueType  # 1
global___DataType = DataType


class MessageData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    type: global___DataType.ValueType
    @property
    def x(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def y(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(self,
        *,
        type: global___DataType.ValueType = ...,
        x: typing.Optional[typing.Iterable[builtins.float]] = ...,
        y: typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type","x",b"x","y",b"y"]) -> None: ...
global___MessageData = MessageData

class DataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STATUS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    status: builtins.bool
    type: global___DataType.ValueType
    def __init__(self,
        *,
        status: builtins.bool = ...,
        type: global___DataType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["status",b"status","type",b"type"]) -> None: ...
global___DataRequest = DataRequest
