"""
This type stub file was generated by pyright.
"""

from OpenGL._configflags import FULL_LOGGING

"""
This type stub file was generated by pyright.
"""
getLog = ...
def getException(error):
    """Get formatted traceback from exception"""
    ...

if FULL_LOGGING:
    ...
class _LoggedFunction(object):
    """Proxy that overrides __call__ to log arguments"""
    def __init__(self, base, log) -> None:
        ...
    
    def __setattr__(self, key, value):
        ...
    
    def __getattr__(self, key):
        ...
    


class _FullLoggedFunction(_LoggedFunction):
    """Fully-logged function wrapper (logs all call params to OpenGL.calltrace)"""
    _callTrace = ...
    def __call__(self, *args, **named):
        ...
    


class _ErrorLoggedFunction(_LoggedFunction):
    """On-error-logged function wrapper"""
    def __call__(self, *args, **named):
        ...
    


def logOnFail(function, log):
    """Produce possible log-wrapped version of function

    function -- callable object to be wrapped
    log -- the log to which to log information
    
    Uses ERROR_LOGGING and FULL_LOGGING
    to determine whether/how to wrap the function.
    """
    ...

