"""
This type stub file was generated by pyright.
"""

import OpenGL
from OpenGL.raw.GL.ARB.shader_objects import *
from OpenGL.lazywrapper import lazy as _lazy

"""
This type stub file was generated by pyright.
"""
def glInitShaderObjectsARB():
    '''Return boolean indicating whether this extension is available'''
    ...

glShaderSourceARB = ...
glUniform1fvARB = ...
glUniform2fvARB = ...
glUniform3fvARB = ...
glUniform4fvARB = ...
glUniform1ivARB = ...
glUniform2ivARB = ...
glUniform3ivARB = ...
glUniform4ivARB = ...
glUniformMatrix2fvARB = ...
glUniformMatrix3fvARB = ...
glUniformMatrix4fvARB = ...
glGetObjectParameterfvARB = ...
glGetObjectParameterivARB = ...
glGetInfoLogARB = ...
glGetAttachedObjectsARB = ...
glGetActiveUniformARB = ...
glGetShaderSourceARB = ...
GL_INFO_LOG_LENGTH_ARB = ...
glShaderSourceARB = ...
conv = ...
glShaderSourceARB = ...
if OpenGL.ERROR_CHECKING:
    ...
if OpenGL.ERROR_CHECKING:
    ...
@_lazy(glGetInfoLogARB)
def glGetInfoLogARB(baseOperation, obj):
    """Retrieve the program/shader's error messages as a Python string

    returns string which is '' if no message
    """
    ...

@_lazy(glGetAttachedObjectsARB)
def glGetAttachedObjectsARB(baseOperation, obj):
    """Retrieve the attached objects as an array of GLhandleARB instances"""
    ...

@_lazy(glGetShaderSourceARB)
def glGetShaderSourceARB(baseOperation, obj):
    """Retrieve the program/shader's source code as a Python string

    returns string which is '' if no source code
    """
    ...

@_lazy(glGetActiveUniformARB)
def glGetActiveUniformARB(baseOperation, program, index, bufSize=...):
    """Retrieve the name, size and type of the uniform of the index in the program"""
    ...

@_lazy(glGetUniformLocationARB)
def glGetUniformLocationARB(baseOperation, program, name):
    """Check that name is a string with a null byte at the end of it"""
    ...

