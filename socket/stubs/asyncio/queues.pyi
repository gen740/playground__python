from _typeshed import Incomplete

class QueueEmpty(Exception): ...
class QueueFull(Exception): ...

class Queue:
    def __init__(self, maxsize: int = ..., *, loop: Incomplete | None = ...) -> None: ...
    __class_getitem__: Incomplete
    def qsize(self): ...
    @property
    def maxsize(self): ...
    def empty(self): ...
    def full(self): ...
    async def put(self, item): ...
    def put_nowait(self, item) -> None: ...
    async def get(self): ...
    def get_nowait(self): ...
    def task_done(self) -> None: ...
    async def join(self) -> None: ...

class PriorityQueue(Queue): ...
class LifoQueue(Queue): ...
