"""
This type stub file was generated by pyright.
"""

from django.db.models.expressions import Func
from django.db.models.functions.mixins import FixDecimalInputMixin, NumericOutputFieldMixin
from django.db.models.lookups import Transform

class Abs(Transform):
    function = ...
    lookup_name = ...


class ACos(NumericOutputFieldMixin, Transform):
    function = ...
    lookup_name = ...


class ASin(NumericOutputFieldMixin, Transform):
    function = ...
    lookup_name = ...


class ATan(NumericOutputFieldMixin, Transform):
    function = ...
    lookup_name = ...


class ATan2(NumericOutputFieldMixin, Func):
    function = ...
    arity = ...
    def as_sqlite(self, compiler, connection, **extra_context):
        ...
    


class Ceil(Transform):
    function = ...
    lookup_name = ...
    def as_oracle(self, compiler, connection, **extra_context):
        ...
    


class Cos(NumericOutputFieldMixin, Transform):
    function = ...
    lookup_name = ...


class Cot(NumericOutputFieldMixin, Transform):
    function = ...
    lookup_name = ...
    def as_oracle(self, compiler, connection, **extra_context):
        ...
    


class Degrees(NumericOutputFieldMixin, Transform):
    function = ...
    lookup_name = ...
    def as_oracle(self, compiler, connection, **extra_context):
        ...
    


class Exp(NumericOutputFieldMixin, Transform):
    function = ...
    lookup_name = ...


class Floor(Transform):
    function = ...
    lookup_name = ...


class Ln(NumericOutputFieldMixin, Transform):
    function = ...
    lookup_name = ...


class Log(FixDecimalInputMixin, NumericOutputFieldMixin, Func):
    function = ...
    arity = ...
    def as_sqlite(self, compiler, connection, **extra_context):
        ...
    


class Mod(FixDecimalInputMixin, NumericOutputFieldMixin, Func):
    function = ...
    arity = ...


class Pi(NumericOutputFieldMixin, Func):
    function = ...
    arity = ...
    def as_oracle(self, compiler, connection, **extra_context):
        ...
    


class Power(NumericOutputFieldMixin, Func):
    function = ...
    arity = ...


class Radians(NumericOutputFieldMixin, Transform):
    function = ...
    lookup_name = ...
    def as_oracle(self, compiler, connection, **extra_context):
        ...
    


class Random(NumericOutputFieldMixin, Func):
    function = ...
    arity = ...
    def as_mysql(self, compiler, connection, **extra_context):
        ...
    
    def as_oracle(self, compiler, connection, **extra_context):
        ...
    
    def as_sqlite(self, compiler, connection, **extra_context):
        ...
    
    def get_group_by_cols(self, alias=...):
        ...
    


class Round(Transform):
    function = ...
    lookup_name = ...


class Sign(Transform):
    function = ...
    lookup_name = ...


class Sin(NumericOutputFieldMixin, Transform):
    function = ...
    lookup_name = ...


class Sqrt(NumericOutputFieldMixin, Transform):
    function = ...
    lookup_name = ...


class Tan(NumericOutputFieldMixin, Transform):
    function = ...
    lookup_name = ...


