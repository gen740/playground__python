import subprocess
from _typeshed import Incomplete

PIPE: Incomplete

def pipe(*, duplex: bool = ..., overlapped=..., bufsize=...): ...

class PipeHandle:
    def __init__(self, handle) -> None: ...
    @property
    def handle(self): ...
    def fileno(self): ...
    def close(self, *, CloseHandle=...) -> None: ...
    def __del__(self, _warn=...) -> None: ...
    def __enter__(self): ...
    def __exit__(self, t, v, tb) -> None: ...

class Popen(subprocess.Popen):
    stdin: Incomplete
    stdout: Incomplete
    stderr: Incomplete
    def __init__(self, args, stdin: Incomplete | None = ..., stdout: Incomplete | None = ..., stderr: Incomplete | None = ..., **kwds) -> None: ...
