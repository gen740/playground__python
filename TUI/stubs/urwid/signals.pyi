from typing import Any

class MetaSignals(type):
    def __init__(cls, name, bases, d) -> None: ...

def setdefaultattr(obj, name, value): ...

class Key: ...

class Signals:
    def __init__(self) -> None: ...
    def register(self, sig_cls, signals) -> None: ...
    def connect(self, obj, name, callback, user_arg: Any | None = ..., weak_args: Any | None = ..., user_args: Any | None = ...): ...
    def disconnect(self, obj, name, callback, user_arg: Any | None = ..., weak_args: Any | None = ..., user_args: Any | None = ...): ...
    def disconnect_by_key(self, obj, name, key) -> None: ...
    def emit(self, obj, name, *args): ...

emit_signal: Any
register_signal: Any
connect_signal: Any
disconnect_signal: Any
disconnect_signal_by_key: Any
