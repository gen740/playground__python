"""
This type stub file was generated by pyright.
"""

import ctypes
from OpenGL import arrays, platform as _p
from OpenGL.raw.GL import _types as _cs
from OpenGL.raw.GL._types import *

'''Autogenerated by xml_generate script, do not edit!'''
_EXTENSION_NAME = ...
GL_ACTIVE_TEXTURE = ...
GL_ADD_SIGNED = ...
GL_CLAMP_TO_BORDER = ...
GL_CLIENT_ACTIVE_TEXTURE = ...
GL_COMBINE = ...
GL_COMBINE_ALPHA = ...
GL_COMBINE_RGB = ...
GL_COMPRESSED_ALPHA = ...
GL_COMPRESSED_INTENSITY = ...
GL_COMPRESSED_LUMINANCE = ...
GL_COMPRESSED_LUMINANCE_ALPHA = ...
GL_COMPRESSED_RGB = ...
GL_COMPRESSED_RGBA = ...
GL_COMPRESSED_TEXTURE_FORMATS = ...
GL_CONSTANT = ...
GL_DOT3_RGB = ...
GL_DOT3_RGBA = ...
GL_INTERPOLATE = ...
GL_MAX_CUBE_MAP_TEXTURE_SIZE = ...
GL_MAX_TEXTURE_UNITS = ...
GL_MULTISAMPLE = ...
GL_MULTISAMPLE_BIT = ...
GL_NORMAL_MAP = ...
GL_NUM_COMPRESSED_TEXTURE_FORMATS = ...
GL_OPERAND0_ALPHA = ...
GL_OPERAND0_RGB = ...
GL_OPERAND1_ALPHA = ...
GL_OPERAND1_RGB = ...
GL_OPERAND2_ALPHA = ...
GL_OPERAND2_RGB = ...
GL_PREVIOUS = ...
GL_PRIMARY_COLOR = ...
GL_PROXY_TEXTURE_CUBE_MAP = ...
GL_REFLECTION_MAP = ...
GL_RGB_SCALE = ...
GL_SAMPLES = ...
GL_SAMPLE_ALPHA_TO_COVERAGE = ...
GL_SAMPLE_ALPHA_TO_ONE = ...
GL_SAMPLE_BUFFERS = ...
GL_SAMPLE_COVERAGE = ...
GL_SAMPLE_COVERAGE_INVERT = ...
GL_SAMPLE_COVERAGE_VALUE = ...
GL_SOURCE0_ALPHA = ...
GL_SOURCE0_RGB = ...
GL_SOURCE1_ALPHA = ...
GL_SOURCE1_RGB = ...
GL_SOURCE2_ALPHA = ...
GL_SOURCE2_RGB = ...
GL_SUBTRACT = ...
GL_TEXTURE0 = ...
GL_TEXTURE1 = ...
GL_TEXTURE10 = ...
GL_TEXTURE11 = ...
GL_TEXTURE12 = ...
GL_TEXTURE13 = ...
GL_TEXTURE14 = ...
GL_TEXTURE15 = ...
GL_TEXTURE16 = ...
GL_TEXTURE17 = ...
GL_TEXTURE18 = ...
GL_TEXTURE19 = ...
GL_TEXTURE2 = ...
GL_TEXTURE20 = ...
GL_TEXTURE21 = ...
GL_TEXTURE22 = ...
GL_TEXTURE23 = ...
GL_TEXTURE24 = ...
GL_TEXTURE25 = ...
GL_TEXTURE26 = ...
GL_TEXTURE27 = ...
GL_TEXTURE28 = ...
GL_TEXTURE29 = ...
GL_TEXTURE3 = ...
GL_TEXTURE30 = ...
GL_TEXTURE31 = ...
GL_TEXTURE4 = ...
GL_TEXTURE5 = ...
GL_TEXTURE6 = ...
GL_TEXTURE7 = ...
GL_TEXTURE8 = ...
GL_TEXTURE9 = ...
GL_TEXTURE_BINDING_CUBE_MAP = ...
GL_TEXTURE_COMPRESSED = ...
GL_TEXTURE_COMPRESSED_IMAGE_SIZE = ...
GL_TEXTURE_COMPRESSION_HINT = ...
GL_TEXTURE_CUBE_MAP = ...
GL_TEXTURE_CUBE_MAP_NEGATIVE_X = ...
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = ...
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = ...
GL_TEXTURE_CUBE_MAP_POSITIVE_X = ...
GL_TEXTURE_CUBE_MAP_POSITIVE_Y = ...
GL_TEXTURE_CUBE_MAP_POSITIVE_Z = ...
GL_TRANSPOSE_COLOR_MATRIX = ...
GL_TRANSPOSE_MODELVIEW_MATRIX = ...
GL_TRANSPOSE_PROJECTION_MATRIX = ...
GL_TRANSPOSE_TEXTURE_MATRIX = ...
@_f
@_p.types(None, _cs.GLenum)
def glActiveTexture(texture):
    ...

@_f
@_p.types(None, _cs.GLenum)
def glClientActiveTexture(texture):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLint, _cs.GLenum, _cs.GLsizei, _cs.GLint, _cs.GLsizei, ctypes.c_void_p)
def glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLint, _cs.GLenum, _cs.GLsizei, _cs.GLsizei, _cs.GLint, _cs.GLsizei, ctypes.c_void_p)
def glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLint, _cs.GLenum, _cs.GLsizei, _cs.GLsizei, _cs.GLsizei, _cs.GLint, _cs.GLsizei, ctypes.c_void_p)
def glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLint, _cs.GLint, _cs.GLsizei, _cs.GLenum, _cs.GLsizei, ctypes.c_void_p)
def glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLint, _cs.GLint, _cs.GLint, _cs.GLsizei, _cs.GLsizei, _cs.GLenum, _cs.GLsizei, ctypes.c_void_p)
def glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLint, _cs.GLint, _cs.GLint, _cs.GLint, _cs.GLsizei, _cs.GLsizei, _cs.GLsizei, _cs.GLenum, _cs.GLsizei, ctypes.c_void_p)
def glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLint, ctypes.c_void_p)
def glGetCompressedTexImage(target, level, img):
    ...

@_f
@_p.types(None, arrays.GLdoubleArray)
def glLoadTransposeMatrixd(m):
    ...

@_f
@_p.types(None, arrays.GLfloatArray)
def glLoadTransposeMatrixf(m):
    ...

@_f
@_p.types(None, arrays.GLdoubleArray)
def glMultTransposeMatrixd(m):
    ...

@_f
@_p.types(None, arrays.GLfloatArray)
def glMultTransposeMatrixf(m):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLdouble)
def glMultiTexCoord1d(target, s):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLdoubleArray)
def glMultiTexCoord1dv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLfloat)
def glMultiTexCoord1f(target, s):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLfloatArray)
def glMultiTexCoord1fv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLint)
def glMultiTexCoord1i(target, s):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLintArray)
def glMultiTexCoord1iv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLshort)
def glMultiTexCoord1s(target, s):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLshortArray)
def glMultiTexCoord1sv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLdouble, _cs.GLdouble)
def glMultiTexCoord2d(target, s, t):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLdoubleArray)
def glMultiTexCoord2dv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLfloat, _cs.GLfloat)
def glMultiTexCoord2f(target, s, t):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLfloatArray)
def glMultiTexCoord2fv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLint, _cs.GLint)
def glMultiTexCoord2i(target, s, t):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLintArray)
def glMultiTexCoord2iv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLshort, _cs.GLshort)
def glMultiTexCoord2s(target, s, t):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLshortArray)
def glMultiTexCoord2sv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLdouble, _cs.GLdouble, _cs.GLdouble)
def glMultiTexCoord3d(target, s, t, r):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLdoubleArray)
def glMultiTexCoord3dv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLfloat, _cs.GLfloat, _cs.GLfloat)
def glMultiTexCoord3f(target, s, t, r):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLfloatArray)
def glMultiTexCoord3fv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLint, _cs.GLint, _cs.GLint)
def glMultiTexCoord3i(target, s, t, r):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLintArray)
def glMultiTexCoord3iv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLshort, _cs.GLshort, _cs.GLshort)
def glMultiTexCoord3s(target, s, t, r):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLshortArray)
def glMultiTexCoord3sv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLdouble, _cs.GLdouble, _cs.GLdouble, _cs.GLdouble)
def glMultiTexCoord4d(target, s, t, r, q):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLdoubleArray)
def glMultiTexCoord4dv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLfloat, _cs.GLfloat, _cs.GLfloat, _cs.GLfloat)
def glMultiTexCoord4f(target, s, t, r, q):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLfloatArray)
def glMultiTexCoord4fv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLint, _cs.GLint, _cs.GLint, _cs.GLint)
def glMultiTexCoord4i(target, s, t, r, q):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLintArray)
def glMultiTexCoord4iv(target, v):
    ...

@_f
@_p.types(None, _cs.GLenum, _cs.GLshort, _cs.GLshort, _cs.GLshort, _cs.GLshort)
def glMultiTexCoord4s(target, s, t, r, q):
    ...

@_f
@_p.types(None, _cs.GLenum, arrays.GLshortArray)
def glMultiTexCoord4sv(target, v):
    ...

@_f
@_p.types(None, _cs.GLfloat, _cs.GLboolean)
def glSampleCoverage(value, invert):
    ...

