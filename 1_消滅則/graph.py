import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rcParams
from scipy.optimize import curve_fit


rcParams['font.family'] = 'sans-serif'
rcParams['font.sans-serif'] = ['Hiragino Maru Gothic Pro', 'Yu Gothic', 'Meirio',
                               'Takao', 'IPAexGothic', 'IPAPGothic', 'VL PGothic', 'Noto Sans CJK JP']

# CsCl
larr = [
    [21.77, 4.082],
    [30.92, 4.090],
    [38.04, 4.097],
    [44.14, 4.103],
    [49.68, 4.103],
    [54.75, 4.107],
    [64.09, 4.109],
    [68.45, 4.112],
    [72.7, 4.113],
    [76.84, 4.114],
    [80.93, 4.115],
    [84.98, 4.115],
    [88.96, 4.117],
    [96.98, 4.118],
    [101.03, 4.118],
    [105.12, 4.119],
    [109.31, 4.120],
    [113.61, 4.120],
    [118.04, 4.120],
]

# RbCl
larr = [
    [23.53, 6.548],
    [27.21, 6.554],
    [38.79, 6.566],
    [45.8, 6.571],
    [47.94, 6.573],
    [55.93, 6.576],
    [61.42, 6.580],
    [63.2, 6.579],
    [70.03, 6.582],
    [74.96, 6.583],
    [82.95, 6.584],
    [87.65, 6.586],
    [89.23, 6.586],
    [95.47, 6.588],
    [100.22, 6.588],
    [101.82, 6.588],
    [108.3, 6.589],
    [113.32, 6.590],
    [115.03, 6.590],
]

# Rb7Cs93
larr = [
    [21.71, 4.093],
    [30.87, 4.096],
    [38.0, 4.101],
    [44.15, 4.102],
    [49.65, 4.106],
    [54.74, 4.107],
    [64.09, 4.109],
    [68.48, 4.110],
    [72.76, 4.110],
    [76.9, 4.112],
    [81.04, 4.110],
    [85.09, 4.111],
    [89.08, 4.112],
    [97.1, 4.114],
    [101.24, 4.112],
    [105.38, 4.112],
    [109.54, 4.114],
    [113.92, 4.113],
    [118.46, 4.111],
]

# KCl
larr = [
    # [25.73, 5.997],
    [28.52, 6.259],
    [40.69, 6.271],
    [50.36, 6.277],
    [58.82, 6.279],
    [66.56, 6.283],
    [73.87, 6.285],
    [87.81, 6.288],
    [94.7, 6.289],
    [101.65, 6.289],
    [108.75, 6.291],
]

larr = np.array(larr)

ax: plt.Axes
fig, ax = plt.subplots(figsize=(8, 6))

ax.plot(larr[:, 0], larr[:, 1], "k-")
ax.set_title(r"KClの格子定数と角度のグラフ")
ax.set_xlabel(r"$2\theta$(deg)")
ax.set_ylabel(r"格子定数($\AA$)")


def func(x, a, b, c):
    return a * np.sin(b * x) + c


x = np.arange(0, 180, 0.1)
coef, conv = curve_fit(func, larr[:, 0], larr[:, 1])
print(coef, conv)

ax.plot(x, func(x, coef[0], coef[1], coef[2]))

fig.show()
plt.show()
